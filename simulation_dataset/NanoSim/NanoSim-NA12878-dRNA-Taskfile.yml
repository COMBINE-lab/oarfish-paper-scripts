version: '3'

tasks:

  get_read_data:
    summary: |
      Obtain the NA12878 directRNA read data
    cmds:
      - aria2c -x8 https://s3.amazonaws.com/nanopore-human-wgs/rna/fastq/NA12878-DirectRNA_All_Guppy_4.2.2.fastq.gz

  get_ref_txps:
    summary: |
      Obtain the reference transcript sequences for RefSeq 110 (GRCh38)
    cmds:
      - aria2c -x8 https://ftp.ncbi.nlm.nih.gov/genomes/all/annotation_releases/9606/110/GCF_000001405.40_GRCh38.p14/GCF_000001405.40_GRCh38.p14_rna.fna.gz

  get_ref_genome:
    summary: |
      Obtain the reference genome sequences for RefSeq 110 (GRCh38)
    cmds:
      - aria2c -x8 https://ftp.ncbi.nlm.nih.gov/genomes/all/annotation_releases/9606/110/GCF_000001405.40_GRCh38.p14/GCF_000001405.40_GRCh38.p14_genomic.fna.gz

  get_ref_annotation:
    summary: |
      obtain the resfrence annotation for RefSeq 110
    cmds:
      - aria2c -x8 https://ftp.ncbi.nlm.nih.gov/genomes/all/annotation_releases/9606/110/GCF_000001405.40_GRCh38.p14/GCF_000001405.40_GRCh38.p14_genomic.gff.gz

  align_quant_drna_txps:
    cmds:
      - echo "Running minimap2 on drna dataset"
      - minimap2 -ax map-ont --eqx -N 181 -t 36 GCF_000001405.40_GRCh38.p14_rna.fna NA12878-DirectRNA_All_Guppy_4.2.2.fastq | samtools view -o NA12878-DirectRNA_All_Guppy_4.2.2.T.bam -@ 8
      - echo "Running salmon on cdna for quantification"
      - mkdir -p NA12878-DirectRNA_quantification
      - salmon quant --ont --useEM -p 30 -t GCF_000001405.40_GRCh38.p14_rna.fna -l U -a NA12878-DirectRNA_All_Guppy_4.2.2.T.bam -o NA12878-DirectRNA_quantification
    sources:
      - GCF_000001405.40_GRCh38.p14_rna.fna
      - NA12878-DirectRNA_All_Guppy_4.2.2.fastq
    generates:
      - NA12878-DirectRNA_All_Guppy_4.2.2.T.bam


  get_ref_quants:
    summary: |
      Obtain the reference quantifications assocaited with the TranSigner paper
    cmds:
      - awk 'BEGIN {print "target_id\test_counts\ttpm"} NR>1 {print $1 "\t" $5 "\t" $4}' NA12878-DirectRNA_quantification/quant.sf > DirectRNA_quantification.tsv
    generates:
      - DirectRNA_quantification.tsv


  generate_pc_lnc_ref:
    summary: |
      Filter for just the protein coding and long non-coding RNA transcripts
    cmds:
      - rg "(^>NM_)|(long non-coding RNA)" GCF_000001405.40_GRCh38.p14_rna.fna | cut -d' ' -f1 | awk '{print(substr($1,2))}' > target_transcript_names_tmp.txt
      - defer: rm target_transcript_names_tmp.txt
      - rg -F -f target_transcript_names_tmp.txt DirectRNA_quantification.tsv | cut -f 1 | rg -v "\.\d+_\d+" > target_transcript_names.txt
      - python3 get_target_seqs.py target_transcript_names.txt GCF_000001405.40_GRCh38.p14_rna.fna.gz > GCF_000001405.40_GRCh38.p14_pc_lncrna.fna

  filter_quantification_file:
    summary: |
      Filter for just the protein coding and long non-coding RNA transcripts
    cmds:
      - head -n 1 DirectRNA_quantification.tsv > DirectRNA_quantification_pc_lncrna.tsv
      - grep -F -f target_transcript_names.txt DirectRNA_quantification.tsv >> DirectRNA_quantification_pc_lncrna.tsv
    generates:
      - DirectRNA_quantification_pc_lncrna.tsv

  learn_sim_params:
    cmds:
      - mkdir -p nanosim_model
      - NanoSim/src/read_analysis.py transcriptome -i NA12878-DirectRNA_All_Guppy_4.2.2.fastq.gz -rg GCF_000001405.40_GRCh38.p14_genomic.fna.gz -rt GCF_000001405.40_GRCh38.p14_pc_lncrna.fna -t 64 --no_intron_retention -o nanosim_model/training
    generates:
      - nanosim_model/*

  sim_reads:
    cmds:
      - mkdir -p nanosim_reads
      - NanoSim/src/simulator.py transcriptome --model_prefix nanosim_model/training --ref_t GCF_000001405.40_GRCh38.p14_pc_lncrna.fna --ref_g GCF_000001405.40_GRCh38.p14_genomic.fna -e DirectRNA_quantification_pc_lncrna.tsv -o nanosim_reads/drna_s1_reads -n 14000000 -s 314 --no_model_ir --fastq -t 64 -r dRNA -s 0.995 -b guppy

  get_ground_truth_counts:
    cmds:
      - rg "^@" nanosim_reads/drna_s1_reads.fastq | cut -d'_' -f1,2,4 | awk -F'_' '{ if($3 == "aligned") print(substr($1,2)"_"$2) }' | sort -T {{.TMPDIR}} | uniq -c | awk '{ print($2,$1) }' > output/drna_s1/truth/quant_guppy.tsv 